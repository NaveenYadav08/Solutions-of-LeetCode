https://www.geeksforgeeks.org/problems/merge-two-sorted-arrays-1587115620/1

TC - O((n+m)*log(n+m))
SC - O(1)

C++ 
        void swapIfGreater(long long arr1[], long long arr2[], int ind1, int ind2) {
            if (arr1[ind1] > arr2[ind2]) {
                swap(arr1[ind1], arr2[ind2]);
            }
        }
        
        void merge(long long arr1[], long long arr2[], int n, int m) {
            // len of the imaginary single array:
            int len = n + m;
        
            // Initial gap:
            int gap = (len / 2) + (len % 2); // Ceil of Gap/2
        
            while (gap > 0) {
                // Place 2 pointers:
                int left = 0;
                int right = left + gap;
                while (right < len) {
                    // case 1: left in arr1[]
                    //and right in arr2[]:
                    if (left < n && right >= n) {
                        swapIfGreater(arr1, arr2, left, right - n);
                    }
                    // case 2: both pointers in arr2[]:
                    else if (left >= n) {
                        swapIfGreater(arr2, arr2, left - n, right - n);
                    }
                    // case 3: both pointers in arr1[]:
                    else {
                        swapIfGreater(arr1, arr1, left, right);
                    }
                    left++, right++;
                }
                // break if iteration gap=1 is completed:
                if (gap == 1) break; // because next gap is ceil(1 / 2) = 1 infinfte loop
                // for len = 9, gap = 5,3,2,1,1
                // need to update weight after the check to ensure the gap == 1 work once
        
                // Otherwise, calculate new gap:
                gap = (gap / 2) + (gap % 2);
            }
        }
